{"ast":null,"code":"var _jsxFileName = \"/Users/danulingam/Desktop/Ebuy/front-end/src/components/UpdateComponent.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UpdateProduct = () => {\n  _s();\n  const [name, setProductName] = useState(\"\");\n  const [price, setPrice] = useState(\"\");\n  const [category, setCategory] = useState(\"\");\n  const [company, setCompany] = useState(\"\");\n  const {\n    id\n  } = useParams();\n  useEffect(() => {\n    const fetchProductDetails = async () => {\n      let result = await fetch('http://localhost:3001/product/${id}');\n      result = await result.json();\n      if (result) {\n        // Set the initial state based on fetched product details\n        setProductName(result.name);\n        setPrice(result.price);\n        setCategory(result.category);\n        setCompany(result.company);\n      } else {\n        console.error(\"No record found\");\n      }\n    };\n    fetchProductDetails();\n  }, [id]);\n  const updateProductData = async () => {\n    // Implement your update logic here\n    console.warn(name, price, category, company);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"addproduct\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Update product\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"inputBox\",\n      type: \"text\",\n      placeholder: name,\n      value: name,\n      onChange: e => setProductName(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"inputBox\",\n      type: \"text\",\n      placeholder: price,\n      value: price,\n      onChange: e => setPrice(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"inputBox\",\n      type: \"text\",\n      placeholder: category,\n      value: category,\n      onChange: e => setCategory(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"inputBox\",\n      type: \"text\",\n      placeholder: company,\n      value: company,\n      onChange: e => setCompany(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: updateProductData,\n      className: \"appButton\",\n      type: \"button\",\n      children: \"Update\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n};\n_s(UpdateProduct, \"C6t/TXeZglHV/GTnzBvOm8LtbQs=\", false, function () {\n  return [useParams];\n});\n_c = UpdateProduct;\nexport default UpdateProduct;\nvar _c;\n$RefreshReg$(_c, \"UpdateProduct\");","map":{"version":3,"names":["React","useState","useEffect","useParams","jsxDEV","_jsxDEV","UpdateProduct","_s","name","setProductName","price","setPrice","category","setCategory","company","setCompany","id","fetchProductDetails","result","fetch","json","console","error","updateProductData","warn","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["/Users/danulingam/Desktop/Ebuy/front-end/src/components/UpdateComponent.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\n\nconst UpdateProduct = () => {\n    const [name, setProductName] = useState(\"\");\n    const [price, setPrice] = useState(\"\");\n    const [category, setCategory] = useState(\"\");\n    const [company, setCompany] = useState(\"\");\n\n    const { id } = useParams();\n\n    useEffect(() => {\n        const fetchProductDetails = async () => {\n            let result = await fetch('http://localhost:3001/product/${id}');\n            result = await result.json();\n            if (result) {\n                // Set the initial state based on fetched product details\n                setProductName(result.name);\n                setPrice(result.price);\n                setCategory(result.category);\n                setCompany(result.company);\n            } else {\n                console.error(\"No record found\");\n            }\n        };\n\n        fetchProductDetails();\n    }, [id]);\n\n    const updateProductData = async () => {\n        // Implement your update logic here\n        console.warn(name, price, category, company);\n    };\n\n    return (\n        <div className=\"addproduct\">\n            <h1>Update product</h1>\n            <input className=\"inputBox\" type=\"text\" placeholder={name}  value={name} onChange={(e) => setProductName(e.target.value)} />\n            <input className=\"inputBox\" type=\"text\" placeholder={price}  value={price} onChange={(e) => setPrice(e.target.value)} />\n            <input className=\"inputBox\" type=\"text\" placeholder={category} value={category} onChange={(e) => setCategory(e.target.value)} />\n            <input className=\"inputBox\" type=\"text\" placeholder={company}  value={company} onChange={(e) => setCompany(e.target.value)} />\n            <button onClick={updateProductData} className=\"appButton\" type=\"button\">Update</button>\n        </div>\n    );\n};\n\nexport default UpdateProduct;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}