{"ast":null,"code":"var _jsxFileName = \"/Users/danulingam/Desktop/Ebuy/front-end/src/components/UpdateComponent.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UpdateProduct = () => {\n  _s();\n  const [name, setProductName] = useState(\"\");\n  const [price, setPrice] = useState(\"\");\n  const [category, setCategory] = useState(\"\");\n  const [company, setCompany] = useState(\"\");\n  const updateProductData = async () => {\n    // Implement your update logic here\n    console.warn(name, price, category, company);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"addproduct\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Update product\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      className: \"inputBox\",\n      placeholder: \"Enter name\",\n      value: name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      className: \"inputBox\",\n      placeholder: \"Enter price \",\n      value: price\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      className: \"inputBox\",\n      placeholder: \"Enter category \",\n      value: category\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      className: \"inputBox\",\n      placeholder: \"Enter company\",\n      value: company\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: updateProductData,\n      className: \"appButton\",\n      type: \"button\",\n      children: \"Update\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 9\n  }, this);\n};\n_s(UpdateProduct, \"P6/pjkH1vajsijHcii1LLnjPGjQ=\");\n_c = UpdateProduct;\nexport default UpdateProduct;\nvar _c;\n$RefreshReg$(_c, \"UpdateProduct\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","UpdateProduct","_s","name","setProductName","price","setPrice","category","setCategory","company","setCompany","updateProductData","console","warn","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onClick","_c","$RefreshReg$"],"sources":["/Users/danulingam/Desktop/Ebuy/front-end/src/components/UpdateComponent.js"],"sourcesContent":["import React, { useState} from 'react';\n\nconst UpdateProduct = () => {\n    const [name, setProductName] = useState(\"\");\n    const [price, setPrice] = useState(\"\");\n    const [category, setCategory] = useState(\"\");\n    const [company, setCompany] = useState(\"\");\n\n\n\n    const updateProductData = async () => {\n        // Implement your update logic here\n        console.warn(name, price, category, company);\n    };\n\n    return (\n        <div className=\"addproduct\">\n            <h1>Update product</h1>\n            <input type=\"text\" className=\"inputBox\"  placeholder=\"Enter name\" value={name} />\n            <input type=\"text\"  className=\"inputBox\" placeholder=\"Enter price \"  value={price} />\n            <input type=\"text\"  className=\"inputBox\" placeholder=\"Enter category \" value={category} />\n            <input type=\"text\" className=\"inputBox\"  placeholder=\"Enter company\"  value={company}  />\n            <button onClick={updateProductData} className=\"appButton\" type=\"button\">Update</button>\n        </div>\n    );\n};\n\nexport default UpdateProduct;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAO,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvC,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxB,MAAM,CAACC,IAAI,EAAEC,cAAc,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAC3C,MAAM,CAACO,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACS,QAAQ,EAAEC,WAAW,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACW,OAAO,EAAEC,UAAU,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAI1C,MAAMa,iBAAiB,GAAG,MAAAA,CAAA,KAAY;IAClC;IACAC,OAAO,CAACC,IAAI,CAACV,IAAI,EAAEE,KAAK,EAAEE,QAAQ,EAAEE,OAAO,CAAC;EAChD,CAAC;EAED,oBACIT,OAAA;IAAKc,SAAS,EAAC,YAAY;IAAAC,QAAA,gBACvBf,OAAA;MAAAe,QAAA,EAAI;IAAc;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACvBnB,OAAA;MAAOoB,IAAI,EAAC,MAAM;MAACN,SAAS,EAAC,UAAU;MAAEO,WAAW,EAAC,YAAY;MAACC,KAAK,EAAEnB;IAAK;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACjFnB,OAAA;MAAOoB,IAAI,EAAC,MAAM;MAAEN,SAAS,EAAC,UAAU;MAACO,WAAW,EAAC,cAAc;MAAEC,KAAK,EAAEjB;IAAM;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACrFnB,OAAA;MAAOoB,IAAI,EAAC,MAAM;MAAEN,SAAS,EAAC,UAAU;MAACO,WAAW,EAAC,iBAAiB;MAACC,KAAK,EAAEf;IAAS;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC1FnB,OAAA;MAAOoB,IAAI,EAAC,MAAM;MAACN,SAAS,EAAC,UAAU;MAAEO,WAAW,EAAC,eAAe;MAAEC,KAAK,EAAEb;IAAQ;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,eACzFnB,OAAA;MAAQuB,OAAO,EAAEZ,iBAAkB;MAACG,SAAS,EAAC,WAAW;MAACM,IAAI,EAAC,QAAQ;MAAAL,QAAA,EAAC;IAAM;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACtF,CAAC;AAEd,CAAC;AAACjB,EAAA,CAvBID,aAAa;AAAAuB,EAAA,GAAbvB,aAAa;AAyBnB,eAAeA,aAAa;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}